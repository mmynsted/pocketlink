#!/bin/sh

#source the config
source .pocketlink

#echo pocket=${pocket}

srcDir='/Users/mmynsted/pocket/pockettest'
dstDir='/Users/mmynsted/pt'

# getTempDir() get a temporary directoy so that git-export-all can have a 
# place for the output tar file.  As of this time it can not 
# write the tar to a pipe/stdout, and the file name is used 
# to determine some of the content of the tar.
function getTempDir()
{
	local tempTemplate=${tmpPath}/`basename $0`'-XXXXXXX'
	local tempDir=`mktemp -d -q ${tempTemplate}`
	if [ $? -ne 0 ]; then
		echo "$0: Can not create temporary directory; unable to continue. " >&2
   		exit 1
	fi
	echo ${tempDir}
}

# unwindSymlinks() clean up the symlinks pointing to a pocket directory
# Attempt to remove any symlinks pointing to a pocket directory
function unwindSymlinks()
{
	#find all of the symlinks in destination directory
 	local links=(`find ${dstDir} -type l -print 2>/dev/null -maxdepth 1`)

	#remove the symlinks that point to the source directory
	for l in "${links[@]}"
	do
		local symlinkDest=`readlink $l`
		echo srcDir=$srcDir l=$l symlinkDest=$symlinkDest
		if [[ $symlinkDest =~ "$srcDir"/.* ]]; then
			echo "OK"
		else
			echo "not OK"
		fi
	done

	#find -L `pwd` -samefile /Users/mmynsted/pocket/pockettest/keys -print 2>/dev/null -maxdepth 1|grep -v '/Users/mmynsted/pocket/pockettest/keys'

}

#get conent for a pocketDirReadme file
function getPocketDirReadme()
{
	echo;
}

#it is VERY important that the symbolic links have the full path
function createSymbolicLinks()
{
	echo;
}

tempDir=$(getTempDir)
rmdir ${tempDir}
unwindSymlinks

